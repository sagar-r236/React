JSX always expect the elements to be wrapped in a single parent,

if your return component like this: 

const SomeComponent = () => {
    return (
        <h1>hello</h1>
        <h1>Sagar</h1>
    )
}

the above code doesn't work as JSX expect everything to be put in a single parent, so the correct way of doing it inside

const SomeComponent = () => {
    return (
        <div>
        <h1>hello</h1>
        <h1>Sagar</h1>
        </div>
    )
}

but now unnecessaryily we are adding one more div which gets rendered in the DOM, therefore in order to resolve this react gives one more component called
fragment, this is like a empty tag so for the above code we can do like:

const SomeComponent = () => {
    return (
        <React.fragment> or <>
        <h1>hello</h1>
        <h1>Sagar</h1>
        </React.fragment> or </>
    )
}


-----------------------------------------------------------------------------------------------------------------------------------------

Adding inline style in the react component

if we have to add inline style to our element in the tag only we can type style just like in html, but here to write js what we use is {} brackets, here also we 
have to open the braces and pass js object to it! that's it.

eg : 
const Component = () => {
  return (

    <div className="name" style={{backgroundColor : "aquamarine"}}> //See here we are passing js object that's all 
      <Title />
      <div className="nav-items">
        <ul>
          <li>Home</li>
          <li>About</li>
          <li>Contact</li> 
          <li>Cart</li>
        </ul>
      </div>  
    </div>
    
  )
}

-----------------------------------------------------------------------------------------------------------------------------------------


Config driven UI 

We can't make different UI for different cities, so backend takes care of all those things this is known as config driven UI.


-----------------------------------------------------------------------------------------------------------------------------------------

Passing in props:

passing in props means passing some data to the function.

eg: const ExampleComponent = (props) => {
  props.name;
}

const SomeComponent = () => {
  return (
    <ExampleComponent data=hello /> {// here you have passed a prop} 
  )
}

object restructuring :

object restructuring is way of directly getting the values of a property from an object.

eg: let's say you have object, a = {name:'sagar', class:'mca'}
    {name, class} = a //object destructuring.
    console.log(name) //output: sagar destructuring happened.







